{"version":3,"sources":["Components/Contact/Contact.module.css","Components/Filter/Filter.module.css","App.module.css","Components/Loader/Loader.module.css","Components/Form/Form.module.css","redux/contact-actions.js","redux/contacts-operations.js","Components/Form/Form.js","Components/Contact/Contact.js","redux/contacts-selectors.js","Components/Filter/Filter.js","Components/Loader/Loader.js","App.js","redux/contact-reducer.js","redux/contact-store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilterValue","axios","defaults","baseURL","Form","dispatch","useDispatch","useState","name","setName","number","setNumber","handleClick","event","target","value","trim","contact","useSelector","contacts","map","resetState","className","s","thumb","onSubmit","preventDefault","includes","toLowerCase","toast","warning","theme","text","post","then","data","catch","error","input","type","pattern","title","required","onChange","id","uuidv4","button","Contacts","filter","useEffect","get","contactList","onClick","contactId","delete","getFilter","state","Filter","label","evt","CustomLoader","Loader","color","height","width","timeout","App","showLoader","loading","Contact","contactsReducer","createReducer","payload","filterReducer","_","action","rootReducer","combineReducers","componentReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,YAAc,6BAA6B,OAAS,0B,mBCArGD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,MAAQ,qB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,MAAQ,oBAAoB,KAAO,mBAAmB,MAAQ,oBAAoB,OAAS,uB,2ICChGC,EAAsBC,YAAa,gCACnCC,EAAsBD,YAAa,gCACnCE,EAAoBF,YAAa,8BAEjCG,EAAoBH,YAAa,8BACjCI,EAAoBJ,YAAa,8BACjCK,EAAkBL,YAAa,4BAE/BM,EAAuBN,YAAa,iCACpCO,EAAuBP,YAAa,iCACpCQ,EAAqBR,YAAa,+BAElCS,EAAoBT,YAAa,8BCA9CU,IAAMC,SAASC,QAAU,wBAGlB,I,eCRA,SAASC,IAKZ,IAAMC,EAAWC,cAEjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAc,SAAAC,GAChB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAER,OAFA,EAAeP,MAGX,IAAK,OACDC,EAAQM,EAAMC,QACd,MACJ,IAAK,SACDL,EAAUI,GACV,MACJ,QACI,SAINE,EAAUC,aAAY,qBAAGC,SAClBC,KAAI,qBAAGZ,WAada,EAAa,WACfZ,EAAQ,IACRE,EAAU,KAGd,OACI,uBAAMW,UAAWC,IAAEC,MAAOC,SAhBT,SAAAZ,GAEb,GADJA,EAAMa,iBACET,EAAQU,SAASnB,EAAKoB,eACtB,OAAOC,IAAMC,QAAQ,8BAA+B,CAAEC,MAAO,SDdhD,IAACC,ECiBtB3B,GDjBsB2B,ECiBC,CAAC,KAAQxB,EAAM,OAAUE,GDjBjB,SAAAL,GACnCA,EAASX,KAETO,IACCgC,KAAK,YAAaD,GAClBE,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAW9B,EAASV,EAAkBwC,OAC3CC,OAAM,SAAAC,GAAK,OAAIhC,EAAST,EAAgByC,UCYrChB,KASA,UACI,kCACI,sBAAMC,UAAWC,IAAEf,KAAnB,kBACA,uBACIc,UAAWC,IAAEe,MACbC,KAAK,OACL/B,KAAK,OACLgC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACR3B,MAAOP,EACPmC,SAAU/B,EACVgC,GAAIC,mBAIZ,kCACI,sBAAMvB,UAAWC,IAAEf,KAAnB,oBACA,uBACI+B,KAAK,MACLjB,UAAWC,IAAEe,MACb9B,KAAK,SACLgC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAU/B,EACVG,MAAOL,EACPkC,GAAIC,mBAGZ,wBAAQN,KAAK,SAASjB,UAAWC,IAAEuB,OAAnC,6B,yBCpCGC,EA1CE,WAEb,IAAM5B,EAAWD,aAAY,YAA2B,IAAxBC,EAAuB,EAAvBA,SAAU6B,EAAa,EAAbA,OAItC,OAHwB7B,EAAS6B,QAAO,SAAA/B,GAAO,OAC3CA,EAAQT,KAAKoB,cAAcD,SAASqB,EAAOpB,qBAK7CvB,EAAWC,cAMjB,OAJA2C,qBAAU,WACN5C,GFDuB,SAAAA,GAC3BA,EAASf,KAETW,IACCiD,IAAI,aACJhB,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAW9B,EAASb,EAAoB2C,OAC7CC,OAAM,SAAAC,GAAK,OAAIhC,EAASZ,EAAkB4C,YEJtC,CAAChC,IAGF,8BACI,oBAAIiB,UAAWC,IAAEC,MAAjB,SACKL,GACGA,EAASC,KAAI,SAAAH,GACT,OACI,qBAAIK,UAAWC,IAAE4B,YAAjB,UACKlC,EAAQT,KADb,KACqBS,EAAQP,OACzB,wBACIY,UAAWC,IAAEuB,OACbP,KAAK,SACLa,QAAS,WFKhB,IAACC,EEJUhD,GFIVgD,EEH4BpC,EAAQ2B,GFGtB,SAAAvC,GACxCA,EAASR,KAETI,IACCqD,OADD,oBACqBD,IACpBnB,MAAK,kBAAM7B,EAASP,EAAqBuD,OACzCjB,OAAM,SAAAC,GAAK,OAAIhC,EAASN,EAAmBsC,WEdhB,sBAF+BpB,EAAQ2B,Y,iBC3B1DW,EAAY,SAAAC,GAAK,OAAIA,EAAMR,QCyBzBS,EAlBA,WACX,IAAM1C,EAAQG,YAAYqC,GACpBlD,EAAWC,cACjB,OACI,wBAAOgB,UAAWC,IAAEmC,MAApB,mCAEI,uBACIpC,UAAWC,IAAEe,MACbC,KAAK,OACLxB,MAAOA,EACP4B,SAAU,SAAAgB,GACNtD,EAASL,EAAkB2D,EAAI7C,OAAOC,e,kCCH3C6C,EAZM,kBACjB,qBAAKtC,UAAWC,IAAEsC,OAAlB,SACI,cAAC,IAAD,CACItB,KAAK,SACLuB,MAAM,UACNC,OAAQ,GACRC,MAAO,IACPC,QAAS,S,iBCERC,G,MAAM,WAEf,IAAMC,EAAajD,aAAY,qBAAGkD,WAElC,OACI,qCACI,oBAAI9C,UAAWC,IAAEkB,MAAjB,uBACA,cAACrC,EAAD,IACC+D,GAAc,cAAC,EAAD,IACf,oBAAI7C,UAAWC,IAAEkB,MAAjB,sBACA,cAAC,EAAD,IACA,cAAC4B,EAAD,IACA,cAAC,IAAD,S,sBCTNC,EAAkBC,YAAc,IAAD,mBAEhC/E,GAAsB,SAACgE,EAAD,YAASgB,WAFC,cAIhC7E,GAAoB,SAAC6D,EAAD,GAAuB,IAAdgB,EAAa,EAAbA,QACxB,MAAM,GAAN,mBAAWhB,GAAX,CAAkBgB,OALS,cAQhC1E,GAAuB,SAAC0D,EAAD,GAAuB,IAAdgB,EAAa,EAAbA,QAC7B,OAAOhB,EAAMR,QAAO,qBAAEJ,KAAc4B,QATP,IAcxBJ,EAAUG,aAAc,GAAD,mBAC/BjF,GAAsB,kBAAM,KADG,cAE/BE,GAAsB,kBAAM,KAFG,cAG/BC,GAAoB,kBAAM,KAHK,cAK/BC,GAAoB,kBAAM,KALK,cAM/BC,GAAoB,kBAAM,KANK,cAO/BC,GAAkB,kBAAM,KAPO,cAS/BC,GAAuB,kBAAM,KATE,cAU/BC,GAAuB,kBAAM,KAVE,cAW/BC,GAAqB,kBAAM,KAXI,IAsBrB,GAAEuE,kBAAiBG,cAPLF,YAAc,GAAD,eACrCvE,GAAoB,SAAC0E,EAAGC,GACrB,OAAOA,EAAOH,YAK2BJ,W,OC9B3CQ,EAAcC,YAAgB,CAChC1D,SAAU2D,EAAiBR,gBAC3BtB,OAAQ8B,EAAiBL,cACzBL,QAASU,EAAiBV,UAiBfW,EAZDC,YAAe,CACzBC,QAASL,EACTM,UAAUC,EACVC,WAAYC,YAAqB,CAC7BC,kBAAmB,CACfC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UC3BtEC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUjB,MAAOA,EAAjB,SAEQ,cAAC,EAAD,QAIZkB,SAASC,eAAe,W","file":"static/js/main.0507d823.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumb\":\"Contact_thumb__IsSv1\",\"contactList\":\"Contact_contactList__1fJAu\",\"button\":\"Contact_button__2igBr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1iqiL\",\"input\":\"Filter_input__1OF4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__-wfTS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__nFiib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumb\":\"Form_thumb__NAUR8\",\"name\":\"Form_name__3Bu-b\",\"input\":\"Form_input__JzyvO\",\"button\":\"Form_button__1vAf-\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilterValue = createAction('contacts/changeFilterValue');\n","import axios from 'axios';\r\nimport {\r\n    addContactSuccess, \r\n    addContactError, \r\n    addContactRequest,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError, \r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError \r\n} from './contact-actions';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\n\r\nexport const fetchData = () => dispatch =>{\r\n    dispatch(fetchContactRequest());\r\n\r\n    axios\r\n    .get('/contacts')\r\n    .then(({data})=> dispatch(fetchContactSuccess(data)))\r\n    .catch(error => dispatch(fetchContactError(error)))\r\n};\r\n\r\n\r\nexport const getSubmitData = (text) => dispatch =>{\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n    .post('/contacts', text)\r\n    .then(({data})=> dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)))\r\n};\r\n\r\n\r\nexport const deleteContact = (contactId) => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError(error)))\r\n};\r\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {getSubmitData} from '../../redux/contacts-operations';\nimport { toast } from 'react-toastify';\n\n\nexport function Form() {\n    Form.propTypes = {\n        getSubmitData: PropTypes.func,\n    };\n\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    \n    const handleClick = event => {\n        const { value, name } = event.target;\n\n        switch (name) {\n            case 'name':\n                setName(value.trim());\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const contact = useSelector(({ contacts }) =>\n        contacts.map(({ name }) => name),\n    );\n\n    const handleSubmit = event => {\n        event.preventDefault();\n            if (contact.includes(name.toLowerCase())) {\n                return toast.warning('Such a name already exists!', { theme: \"dark\"});\n            }\n               \n        dispatch(getSubmitData({'name': name, 'number': number}));\n        resetState();\n    };\n\n    const resetState = () => {\n        setName('');\n        setNumber('');  \n    };\n\n    return (\n        <form className={s.thumb} onSubmit={handleSubmit}>\n            <label>\n                <span className={s.name}>Name</span>\n                <input\n                    className={s.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={name}\n                    onChange={handleClick}\n                    id={uuidv4()}\n                />\n            </label>\n\n            <label>\n                <span className={s.name}>Number</span>\n                <input\n                    type=\"tel\"\n                    className={s.input}\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                    required\n                    onChange={handleClick}\n                    value={number}\n                    id={uuidv4()}\n                />\n            </label>\n            <button type=\"submit\" className={s.button}>\n                Save contact\n            </button>\n        </form>\n    );\n}\n\n","import React, { useEffect }  from 'react';\nimport s from './Contact.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {fetchData, deleteContact} from '../../redux/contacts-operations';\n\n\nconst Contacts = () => {\n    \n    const contacts = useSelector(({ contacts, filter }) => {\n        const visibleContacts = contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n        return visibleContacts;\n    });\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchData());\n      }, [dispatch]);\n\n    return (\n        <div>\n            <ul className={s.thumb}>\n                {contacts &&\n                    contacts.map(contact => {\n                        return (\n                            <li className={s.contactList} key={contact.id}>\n                                {contact.name}: {contact.number}\n                                <button\n                                    className={s.button}\n                                    type=\"button\"\n                                    onClick={() => {\n                                        dispatch(\n                                            deleteContact(contact.id),\n                                        );\n                                    }}\n                                >\n                                    Delete\n                                </button>\n                            </li>\n                        );\n                    })}\n            </ul>\n        </div>\n    );\n};\n\nexport default Contacts;\n\n","export const getFilter = state => state.filter;\r\n\r\nexport const getLoading = state => state.loading;\r\n\r\n","import React from 'react';\nimport s from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {changeFilterValue} from '../../redux/contact-actions';\nimport { getFilter } from '../../redux/contacts-selectors';\n\n\nconst Filter = () => {\n    const value = useSelector(getFilter);\n    const dispatch = useDispatch();\n    return (\n        <label className={s.label}>\n            Filter contact by name\n            <input\n                className={s.input}\n                type=\"text\"\n                value={value}\n                onChange={evt => {\n                    dispatch(changeFilterValue(evt.target.value));\n                }}\n            />\n        </label>\n    );\n};\n\nexport default Filter;\n","import Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nconst CustomLoader = () => (\r\n    <div className={s.Loader}>\r\n        <Loader\r\n            type=\"Hearts\"\r\n            color=\"#12B8AA\"\r\n            height={40}\r\n            width={100}\r\n            timeout={3000}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default CustomLoader;\r\n","import React from 'react';\nimport { useSelector} from 'react-redux';\nimport { Form } from './Components/Form/Form';\nimport Contacts from './Components/Contact/Contact';\nimport Filter from './Components/Filter/Filter';\nimport CustomLoader from './Components/Loader/Loader';\nimport s from './App.module.css';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\nexport const App = () => {\n    \n    const showLoader = useSelector(({ loading }) => loading);\n\n    return (\n        <>\n            <h1 className={s.title}>PhoneBook</h1>\n            <Form />\n            {showLoader && <CustomLoader/>}\n            <h2 className={s.title}>Contacts</h2>\n            <Filter />\n            <Contacts />\n            <ToastContainer/>\n            \n        </>\n    );\n};\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n    addContactSuccess, \n    addContactError, \n    addContactRequest,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError, \n    changeFilterValue,\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError\n} from './contact-actions';\n\n\nconst contactsReducer = createReducer([], {\n    \n    [fetchContactSuccess]: (state, {payload}) => payload,\n\n    [addContactSuccess]: (state, {payload}) => {\n          return [...state, payload];\n    },\n    \n    [deleteContactSuccess]: (state, {payload}) => {\n        return state.filter(({id})=> id !== payload);\n    },\n});\n\n\nexport const loading = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    \n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    \n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n });\n\n\nexport const filterReducer = createReducer('', {\n    [changeFilterValue]: (_, action) => {\n        return action.payload;\n    },\n});\n\n\nexport default { contactsReducer, filterReducer, loading };\n","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport componentReducer from './contact-reducer';\nimport {\n    // persistStore,\n    // persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n\n// const persistConfig = {\n//     key: 'contacts',\n//     storage,\n//     blacklist: ['filter'],\n// };\n\nconst rootReducer = combineReducers({\n    contacts: componentReducer.contactsReducer,\n    filter: componentReducer.filterReducer,\n    loading: componentReducer.loading,\n});\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n    reducer: rootReducer,\n    devTools: process.env.NODE_ENV === 'development',\n    middleware: getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport store from './redux/contact-store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            {/* <PersistGate loading={null} persistor={store.persistor}> */}\n                <App />\n            {/* </PersistGate> */}\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}